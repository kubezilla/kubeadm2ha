#
# Fetch all images necessary to run Kubernetes and install them on the target machines.
#
--- 

- name: Pull docker images for Kubernetes
  hosts: nodes
  remote_user: root
  gather_facts: no
  any_errors_fatal: yes
  pre_tasks:
  - name: Make sure that kubectl is installed on the primary master if 'weavenet' network plugin was selected
    package: name=kubectl-{{ KUBERNETES_VERSION }} state=present
    when: "'primary_master' in group_names and NETWORK_PLUGIN == 'weavenet'"
  - name: Get KUBECTL_VERSION for 'weavenet' network plugin if appliccable
    shell: kubectl version | base64 | tr -d '\n'
    register: KUBECTL_VERSION
    when: "'primary_master' in group_names and NETWORK_PLUGIN == 'weavenet'"
  - name: Generate script for registering names and versions of images to pull
    local_action: template mode=0755 src="{{ playbook_dir }}/roles/primary_master/templates/get-{{ NETWORK_PLUGIN }}-image-specs.sh.j2" dest="/tmp/get-{{ NETWORK_PLUGIN }}-image-specs.sh"
    when: "'primary_master' in group_names"
  - name: Register names and versions of images to pull
    local_action: command "/tmp/get-{{ NETWORK_PLUGIN }}-image-specs.sh"
    register: NETWORK_PLUGIN_IMAGE_SPECS_RESULT
  tasks:
  - name: Make sure that docker is installed on the local host
    local_action: "shell which docker"
    run_once: true
  - name: Generate script for pulling and saving images
    local_action: "template src=pull-and-save.sh.j2 dest=/tmp/pull-and-save.sh mode=0755"
    run_once: true
  - name: Run script for pulling and saving images
    local_action: "command /tmp/pull-and-save.sh {{ NETWORK_PLUGIN }}"
    run_once: true
  tags:
  - fetch-images

- name: Copy docker images for Kubernetes
  hosts: nodes
  remote_user: root
  gather_facts: no
  any_errors_fatal: yes
  pre_tasks:
  - name: Make sure that kubectl is installed on the primary master if 'weavenet' network plugin was selected
    package: name=kubectl-{{ KUBERNETES_VERSION }} state=present
    when: "'primary_master' in group_names and NETWORK_PLUGIN == 'weavenet'"
  - name: Get KUBECTL_VERSION for 'weavenet' network plugin if appliccable
    shell: kubectl version | base64 | tr -d '\n'
    register: KUBECTL_VERSION
    when: "'primary_master' in group_names and NETWORK_PLUGIN == 'weavenet'"
  - name: Generate script for registering names and versions of images to pull
    local_action: template mode=0755 src="{{ playbook_dir }}/roles/primary_master/templates/get-{{ NETWORK_PLUGIN }}-image-specs.sh.j2" dest="/tmp/get-{{ NETWORK_PLUGIN }}-image-specs.sh"
    when: "'primary_master' in group_names"
  - name: Register names and versions of images to pull
    local_action: command "/tmp/get-{{ NETWORK_PLUGIN }}-image-specs.sh"
    register: NETWORK_PLUGIN_IMAGE_SPECS_RESULT
  roles:
  - install-images
  tags:
  - install-images

