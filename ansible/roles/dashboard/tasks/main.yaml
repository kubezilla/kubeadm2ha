#
# Sets up the dashboard
#
---

- name: Make sure that 'rsync' is available on the local host
  local_action: "shell which rsync"
  run_once: true

- name: Make sure that 'git' is available on the local host
  local_action: "shell which git"
  run_once: true

- name: Make sure that 'rsync' is available on the masters
  package: name=rsync state=present
  when: "'masters' in group_names"

- name: clone dashboard git to /tmp
  local_action: "script clone-from-github.sh kubernetes dashboard {{ GIT_DASHBOARD_TAG }}"

- name: Edit the dashboard yaml
  local_action: "replace regexp='      targetPort: 8443' replace='      targetPort: 8443\\n      nodePort: 30443\\n  type: NodePort' path=/tmp/dashboard/aio/deploy/recommended.yaml"
  when: "LOAD_BALANCING is not defined"

- name: clone metrics-server git to /tmp
  local_action: "script clone-from-github.sh kubernetes-sigs metrics-server {{ GIT_METRICS_SERVER_TAG }}"

- name: Create setup directory 
  file: path=/root/setup/dashboard state=directory

- name: Copy (dashboard) kubernetes-dashboard.yaml
  copy: src=/tmp/dashboard/aio/deploy/recommended.yaml dest=/root/setup/dashboard/kubernetes-dashboard.yaml owner=root group=root mode=0644

- name: Copy metrics-server
  synchronize: src=/tmp/metrics-server dest=/root/setup/dashboard/

- name: Add nodeSelector for mine/role=worker to dashboard, influxdb, heapster and grafana
  replace: "regexp='^( +)containers:' replace='\\1nodeSelector:\\n\\1  mine/role: worker\\n\\1containers:' path='{{ item }}'"
  with_items:
  - /root/setup/dashboard/kubernetes-dashboard.yaml
  - /root/setup/dashboard/metrics-server/deploy/kubernetes/metrics-server-deployment.yaml

- name: Install dashboard
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl apply -f /root/setup/dashboard/kubernetes-dashboard.yaml

- name: Install metrics-server
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl apply -f /root/setup/dashboard/metrics-server/deploy/kubernetes

- name: Set kubernetes dashboard replicas
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl scale --replicas={{ groups['masters'] | length }} -n kubernetes-dashboard deployment/kubernetes-dashboard

- name: Set metrics-scraper replicas
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl scale --replicas={{ groups['masters'] | length }} -n kubernetes-dashboard deployment/dashboard-metrics-scraper

- name: Set metrics-server replicas
  shell: export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl scale --replicas={{ groups['masters'] | length }} -n kube-system deployment/metrics-server

