#
# Apply settings on the redundant masters.
#
---
- name: Create script for waiting for secondary masters
  template: "src=wait-for-single-master.sh.j2 dest=/tmp/wait-for-master-{{ master }}.sh mode=0755"
  with_items:
  - "{{ groups['masters'] }}"
  loop_control:
    loop_var: master
  when: "'primary-master' in group_names"

- name: Wait for secondary master to be ready
  command: "sh /tmp/wait-for-master-{{ master }}.sh"
  with_items:
  - "{{ groups['secondary-masters'] }}"
  loop_control:
    loop_var: master
  when: "'primary-master' in group_names"

- name: Set kube-dns replicas
  shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl scale --replicas={{ groups['masters'] | length }} -n kube-system deployment/kube-dns"
  when: "'primary-master' in group_names"

- name: Get current kube-proxy settings
  shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl get configmap -n kube-system kube-proxy -o yaml >/tmp/kube-proxy-cm.yaml"
  when: "'primary-master' in group_names"

- name: Edit current kube-proxy settings to use the virtual IP instead of the host IP
  replace: "regexp='server: *https://.*:6443' replace='server: https://{{ MASTER_VIP }}:6443' path='/tmp/kube-proxy-cm.yaml'"
  when: "'primary-master' in group_names"

- name: Apply edited kube-proxy settings
  shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl apply -f /tmp/kube-proxy-cm.yaml --force"
  when: "'primary-master' in group_names"

- name: Force restart of all kube-proxy pods
  shell: "export KUBECONFIG=/etc/kubernetes/admin.conf; kubectl delete pod -n kube-system -l k8s-app=kube-proxy"
  when: "'primary-master' in group_names"

