#
# Cleanprimary_master up all hosts, so that a new K8s cluster installation can be performed:
# - kubeadm reset is called on all hosts
# - etcd is disabled and stopped
# - the etcd data dir /var/lib/etcd/default.etcd is deleted
# - kubelet is disabled and stopped
#
--- 

- name: Stop and disable keepalived cluster
  service: name=keepalived enabled=false state=stopped
  when: "'masters' in group_names"
  ignore_errors: yes

- name: Disable and stop etcd
  service: name=etcd enabled=false state=stopped
  when: "'masters' in group_names"
  ignore_errors: yes

- name: Disable and stop kubelet
  service: name=kubelet enabled=false state=stopped
  ignore_errors: yes

- name: Run 'kubeadm reset'
  shell: "if which kubeadm >/dev/null; then kubeadm reset -f; else /bin/true; fi"
  ignore_errors: yes

- name: Clean up ~/.kube
  file: path=/root/.kube state=absent
  when: "'masters' in group_names"

- name: Clean up /var/run/dockershim.sock
  file: path=/var/run/dockershim.sock state=absent
  when: "'masters' in group_names"

- name: Clean up /var/lib/etcd.default.etcd on all masters
  file: path=/var/lib/etcd/member state=absent
  when: "'masters' in group_names"

- name: Clean up /var/lib/cni on all nodes
  file: path=/var/lib/cni state=absent

- name: Clean up /var/lib/kubelet on all nodes
  file: path=/var/lib/kubelet state=absent

- name: Re-create /var/lib/kubelet on all nodes
  file: path=/var/lib/kubelet state=directory mode=0755

- name: Delete cni0 network device
  command: "ip link delete cni0"
  ignore_errors: yes

- name: Clean up etcd certificates on all masters
  file: path=/etc/etcd/pki state=absent
  when: "'masters' in group_names"

- name: Clean up etcd certificates on all masters
  file: path=/etc/kubernetes/pki state=absent
  when: "'masters' in group_names"

- name: Clean up /etc/kubernetes/manifests directory
  file: path=/etc/kubernetes/manifests state=absent
  when: "'masters' in group_names"

